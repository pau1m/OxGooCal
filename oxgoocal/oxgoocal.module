<?php
// $Id$

/**
 * @file
 * @TODO:Add Style options / color opaque
 * @todo:Check calendar exists
 * @todo:integration withthird party module
 * @todo:comments
 * 
 * 
 */

DEFINE('OXGOOCAL_SETTINGS_PAGE', 'admin/settings/calendar-auth');



//dsm(OXGOOCAL_SETTINGS_PAGE);
//dsm(date('c', time()));
//dsm(date('c', time() + 50000));
//possibly add c

//Y-m-d



/**
 * Implementation of hook_menu().
 */
function oxgoocal_menu() {

    $items[OXGOOCAL_SETTINGS_PAGE] = array(
        'title' => 'Login credentials for Google calendar',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('oxgoocal_calendar_settings'),
        'access arguments' => array('Administer GCal'),
    );

    $items['test-gcal'] = array(
        'title' => 'test_calendar',
        'page callback' => '_oxgoocal_test',
        'type' => MENU_CALLBACK,
         'access arguments' => array('Administer GCal'),
    );

    // can pass in data that is returned from a function

    return $items;
}

function oxgoocal_calendar_settings() {

    $form['settings'] = array(
        '#type' => 'fieldset',
        '#title' => t('Google account details'),
        '#collapsible' => TRUE,
        '#collapsed' => FALSE,
    );

    $form['settings']['oxgoocal_google_email'] = array(
        '#type' => 'textfield',
        '#title' => t('Google email address'),
        '#default_value' => variable_get('oxgoocal_google_email', ''),
        '#description' => t('Enter email address for the google account'),
    );


        $form['settings']['oxgoocal_google_email_password'] = array(
        '#type' => 'password',
        '#title' => t('Google password'),
        '#default_value' => variable_get('oxgoocal_google_email_password', ''),
        '#description' => t('Enter password for the google account'),
    );

        $form['settings']['oxgoocal_google_calendar_title'] = array(
        '#type' => 'textfield',
        '#title' => t('Google calendar title'),
        '#default_value' => variable_get('oxgoocal_google_calendar_title', ''),
        '#description' => t('Enter title of the google calendar'),
    );


    //add additional sections for appearance (opaque / colour and so on)
    //perhaps an option to guide by colour

        return system_settings_form($form);
}

function oxgoocal_calendar_settings_validate($form, &$form_state) {

    if (!valid_email_address($form_state['values']['oxgoocal_google_email'])){
        form_set_error('', t('Email address is invalid'));
    }
    
    if ($form_state['values']['oxgoocal_google_email_password'] == '') {
    form_set_error('', t('You must enter a password'));
    }

    //at this point should check if calendar exists


}

function oxgoocal_get_authenication_token() {

    $email = variable_get('oxgoocal_google_email', NULL);
    $password = variable_get('oxgoocal_google_email_password', NULL);
    $calendar = variable_get('oxgoocal_google_calendar_title', NULL);

    if (!isset($email) || !isset($password) || !isset($calendar)) {
        //should I be t function in drupal_set_message
        //interpolate URL
     
      
        drupal_set_message(t('Please enter Google email address, password and calendar title on !settings', 
                array('!settings' => l(t('settings page'), OXGOOCAL_SETTINGS_PAGE))));
    }

    $param = 'accountType=HOSTED_OR_GOOGLE&Email=' . $email . '&Passwd=' . $password . '&source=oxgoocal-test-1&service=cl';

    $url = 'https://www.google.com/accounts/ClientLogin';

    $ch = curl_init();
    
    curl_setopt($ch, CURLOPT_FOLLOWLOCATION, TRUE);
    curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 0);
    curl_setopt($ch, CURLOPT_POST, TRUE);   
    curl_setopt($ch, CURLOPT_URL, $url);
    curl_setopt($ch, CURLOPT_POSTFIELDS, $param);
    curl_setopt($ch, CURLINFO_HEADER_OUT, TRUE);
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, TRUE);
    
    dsm('wtf!');
    dsm($http_code);

    //$response = check_plain(curl_exec($ch));
    $response = curl_exec($ch);
    $http_code = curl_getinfo($ch, CURLINFO_HTTP_CODE);
    curl_close($ch);
    unset($ch);

    switch ($http_code) {

        case 200:
            //fetch auth token from response
            preg_match("/Auth=([a-z0-9_-]+)/i", $response, $auth);

            return $auth[1];

        case 403:

            drupal_set_message('Could not retrieve authentication info. Repsonse 403');
            return false;

        default:
            drupal_set_message('Could not retrieve authentication info. Response ' . $http_code);

            return false;
    }
}

/**
   * Method to create an event in a specific calendar.
   * @param string $entry           json formatted google calendar entry
   * @return bool|object            Returns false on failure and object on success
   */

  //take the useful bits from this code
function oxgoocal_add_event_to_calendar($entry) {

    //get authentication token via username and password
    $auth = oxgoocal_get_authenication_token();
    dsm($auth);


    //get calendar title
    $calendar = urlencode(variable_get('oxgoocal_google_calendar_title', NULL));


    //form url for request
    $url = 'https://www.google.com/calendar/feeds/' . $calendar . '/private/full';
    
    $headers = array('Content-Type: application/json');
    $headers[] = 'GData-Version: 2.1';
    $headers[] = 'Authorization: GoogleLogin auth=' . $auth;

    $ch = _oxygoocal_create_curl_handle($url, $auth, $entry, $headers);

    $response = curl_exec($ch);
    dsm($response);

    $http_code = curl_getinfo($ch, CURLINFO_HTTP_CODE);
    dsm('wtf2!');
    dsm($http_code);
    curl_close($ch);
    unset($ch);

    if ($http_code == 302) {


        //get session id from response
        $session_id = _oxgoocal_sessionid_from_302_response($response);

        //build new url
        $url .= '?gsessionid=' . $session_id; // append sesson id to url
        //create curl handle with new url + session id
        $ch = _oxygoocal_create_curl_handle($url, $auth, $entry);

        //make request and fetch response
        $response = curl_exec($ch);
        dsm($response);

        //set new http code (preferrably beginning with a 2 :)
        $http_code = curl_getinfo($ch, CURLINFO_HTTP_CODE);

        //bye bye handle
        curl_close($ch);

    }

    if ($http_code == 201 || $http_code == 200) {
        drupal_set_message(t('Event added to calendar'));
        return 'added event to calendar';

    } else {

        drupal_set_message(t('Could not add to calendar. HTTP code '.$http_code));
        return 'event not added to calendar';
    }
}


function _oxygoocal_create_curl_handle($url, $auth, $param = '', $headers = ''){

//move the header section back up and factor the other curl call in to this one
//***********************8possibly here!!!!!!!!**********************8
//where was it this was actually needed  
  dsm($url);
  dsm($auth);
  dsm($param);
  dsm($headers);



    $ch = curl_init();
    
    //remove line below
   // curl_setopt($ch, CURLOPT_FOLLOWLOCATION, TRUE);
    curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 0); //support https
    curl_setopt($ch, CURLOPT_URL, $url);
    curl_setopt($ch, CURLOPT_POST, TRUE);
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, TRUE);
    curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);
    curl_setopt($ch, CURLINFO_HEADER_OUT, TRUE);
    curl_setopt($ch, CURLOPT_POSTFIELDS, $param); //rename to calendar_entry
    curl_setopt($ch, CURLOPT_HEADER, TRUE);

    return $ch;

}

function _oxgoocal_sessionid_from_302_response($response){

    preg_match('/gsessionid=([\w-]+)/i', $response, $session_id);


    if ($session_id[1]) {
        return $session_id[1];
    } else {

        drupal_set_message('Could not retrieve session id.');
        return FALSE;
    }
}




/*
 * 
 * 
 * @param $calendar_entry 
 * an array in the following format
 * array(
      'title' => 'string',
      'details' => 'string',
      'transparency' => '', // both of these what are the possible options
      'status' => '', // as above
      'location' => 'string',
      'start' => unix time stamp
      'end' => unix time stamp
  );
 * 
 * 
 */
function oxgoocal_create_json_calendar_entry($calendar_entry = array()){

    $entry = array(
        'data' => array(
            'title' => $calendar_entry['title'],
            'details' => $calendar_entry['details'],
            'transparency' => $calendar_entry['transparency'], //poss var get
            'status' =>$calendar_entry['status'],   // what are the possibilities
            'location' => $calendar_entry['location'],
            'when' => array(//dbl array thingy gives us a sqr bracket in JSON
                array(
                    'start' =>date('c', $calendar_entry['start']), //format in 'atom' time
                    'end' => date('c', $calendar_entry['end']), //also known as RFC 3339
                ),
            ),
        ),
    );
    
    dsm($entry);

    return json_encode($entry);



}

function _oxgoocal_test() {
 $test_calendar_entry = array(
      'title' => 'test',
      'details' => 'checking gcal entry success',
      'transparency' => '', // both of these what are the possible options
      'status' => '', // as above
      'location' => 'in my office',
      'start' => time(), //'2011-07-01T22:44:39-05:00', //date('c', time()),
      'end' => time()+20000, //'2011-07-01T23:44:39-05:00',//date('c', time()+50000),
  );
 
 
 $json = oxgoocal_create_json_calendar_entry($test_calendar_entry);
 
return oxgoocal_add_event_to_calendar($json);
 
 
  
  //start and end time - take time now and then add a wee while.
}




function oxgoocal_create_calendar_entry($calendar_entry = array()){
  
  
   $json = oxgoocal_create_json_calendar_entry($calendar_entry);
  
   return oxgoocal_add_event_to_calendar($json);
   
  
}